language: cpp

matrix:
  include:
    - os: linux
      dist: bionic
      compiler: gcc
      env:
        - CROSSCOMPILE=x86_64-w64-mingw32
        - RELEASE=win64
      addons:
        apt:
          packages:
            - autoconf-archive
            - mingw-w64
            - binutils-mingw-w64-x86-64
            - gcc-mingw-w64-x86-64
            - g++-mingw-w64-x86-64
            - mingw-w64-x86-64-dev
    - os: linux
      dist: bionic
      compiler: gcc
      env:
        - CROSSCOMPILE=i686-w64-mingw32
        - RELEASE=win32
      addons:
        apt:
          packages:
            - autoconf-archive
            - mingw-w64
            - binutils-mingw-w64-i686
            - gcc-mingw-w64-i686
            - g++-mingw-w64-i686
            - mingw-w64-i686-dev
    - os: osx
      osx_image: xcode11
      compiler: gcc
      env:
        - CROSSCOMPILE=native
        - CXX_COMPILER=g++-9
        - CC_COMPILER=gcc-9
        - RELEASE=macos

branches:
  only:
  - master

before_install:
  - if [[ "$CC_COMPILER" != "" ]]; then export CC="$CC_COMPILER" ; fi
  - if [[ "$CXX_COMPILER" != "" ]]; then export CXX="$CXX_COMPILER" ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update                   ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew upgrade automake         ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install autoconf-archive ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install gcc9 | true      ; fi
  - ./autogen.sh

script:
  - if [[ "$CROSSCOMPILE" == "native" ]]; then ./configure && make ; fi
  - if [[ "$CROSSCOMPILE" == "x86_64-w64-mingw32" || "$CROSSCOMPILE" == "i686-w64-mingw32" ]]; then CXXFLAGS="-I/usr/${CROSSCOMPILE}/include" CC="$CROSSCOMPILE"-gcc CXX="$CROSSCOMPILE"-g++ AR="$CROSSCOMPILE"-ar ./configure --host="$CROSSCOMPILE" && INC_DIR="-I/usr/${CROSSCOMPILE}/include" make ; fi
  - if [[ "$TRAVIS_PULL_REQUEST" == "false" ]]; then GITHUB_TOKEN=${GITHUB_TOKEN} TRAVIS_BRANCH=${TRAVIS_BRANCH} TRAVIS_JOB_NUMBER=${TRAVIS_JOB_NUMBER} encrypted_61dd9981ab75_key=${encrypted_61dd9981ab75_key} ./deploy.sh $RELEASE push ; fi
